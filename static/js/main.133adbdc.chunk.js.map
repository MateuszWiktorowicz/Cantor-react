{"version":3,"sources":["App/currencies.js","App/Form/Result/index.js","App/Form/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["currencies","short","name","rate","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","className","value","onChange","target","map","type","required","min","step","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAaA,EAAa,CACtB,CACIC,MAAO,MACPC,KAAM,OACNC,KAAM,KAGV,CACIF,MAAO,MACPC,KAAM,yBACNC,KAAM,I,OCRDC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAClB,iCACiBC,IAAXD,GACE,qCACCA,EAAOE,aAAaC,QAAQ,GAD7B,eAECH,EAAOI,aAAaD,QAAQ,GAF7B,OAEuCH,EAAOK,eCF7CC,G,MAAO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBP,EAAa,EAAbA,OACpC,EAAgCQ,mBAASb,EAAW,GAAGC,OAAvD,mBAAOS,EAAP,KAAiBI,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KASA,OACI,gCACI,uBAAMC,SATG,SAACC,GACdA,EAAMC,iBACNP,EAAgBF,EAAUK,IAOIK,UAAU,eAApC,UACI,2BAAUA,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,uCACA,4BACI,kCAEI,sBAAMA,UAAU,kBAAhB,qBAGA,wBACIC,MAAOX,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAAYS,EAAOF,QAC7CD,UAAU,0BACVlB,KAAK,WAJT,SAOKF,EAAWwB,KAAK,SAAAd,GAAQ,OACrB,wBAEIW,MAAOX,EAAST,MAFpB,SAIKS,EAASR,MAHLQ,EAAST,iBAUlC,4BACI,kCACI,sBAAMmB,UAAU,kBAAhB,kCAGA,uBACIC,MAAON,EACPO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,QAC3CD,UAAU,yBACVK,KAAK,SACLC,UAAQ,EAACC,IAAI,IAAIC,KAAK,iBAItC,wBACIR,UAAU,eADd,uBAOJ,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CACIf,OAAQA,W,MChCbwB,MA9Bf,WAEE,MAA4BhB,qBAA5B,mBAAOR,EAAP,KAAeyB,EAAf,KAkBA,OACE,qBAAKV,UAAU,kBAAf,SACE,cAAC,EAAD,CACAf,OAAQA,EACRO,gBApBoB,SAACF,EAAUK,GACjC,IAAMZ,EAAOH,EACV+B,MAAK,qBAAG9B,QAAsBS,KAC9BP,KAEH2B,EACE,CACEvB,cAAeQ,EACfN,aAAcM,EAAQZ,EACtBO,mBCROsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.133adbdc.chunk.js","sourcesContent":["export const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.5,\r\n\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar Amerykański\",\r\n        rate: 4,\r\n\r\n    },\r\n];\r\n","import React from 'react'\r\n\r\nexport const Result = ({ result }) => (\r\n    <p>\r\n        { result !== undefined && (\r\n            <>\r\n            {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n            {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n            </>\r\n        )\r\n        }\r\n    </p>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { currencies } from '../currencies';\r\nimport { Result } from './Result';\r\nimport \"./index.css\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className=\"form js-form\">\r\n                <fieldset className=\"form__fieldset\">\r\n                    <legend className=\"form__legend\">Kalkulator wymiany waluty</legend>\r\n                    <p>\r\n                        <label>\r\n\r\n                            <span className=\"form__labelText\">\r\n                                Waluta:\r\n                            </span>\r\n                            <select\r\n                                value={currency}\r\n                                onChange={({ target }) => setCurrency(target.value)}\r\n                                className=\"form__field js-currency\"\r\n                                name=\"currency\"\r\n\r\n                            >\r\n                                {currencies.map((currency => (\r\n                                    <option\r\n                                        key={currency.short}\r\n                                        value={currency.short}\r\n                                    >\r\n                                        {currency.name}\r\n                                    </option>\r\n                                )))}\r\n                            </select>\r\n\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            <span className=\"form__labelText\">\r\n                                Wpłacasz (PLN):\r\n                            </span>\r\n                            <input\r\n                                value={amount}\r\n                                onChange={({ target }) => setAmount(target.value)}\r\n                                className=\"form__field js-payment\"\r\n                                type=\"number\"\r\n                                required min=\"0\" step=\"0.01\" />\r\n                        </label>\r\n                    </p>\r\n                </fieldset>\r\n                <button\r\n                    className=\"form__button\"\r\n                >\r\n                    Oblicz\r\n                </button>\r\n            </form>\r\n\r\n            <div className=\"form__labelText\">\r\n                <Result\r\n                    result={result}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Form","import React, { useState } from 'react';\nimport { Form } from './Form';\nimport { currencies } from './currencies';\nimport \"./index.css\";\n\n\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const calculateResult = (currency, amount) => {\n    const rate = currencies\n      .find(({ short }) => short === currency)\n      .rate;\n\n    setResult(\n      {\n        sourceAmount: +amount,\n        targetAmount: amount /rate,\n        currency,\n      },\n    );\n\n\n  };\n\n  return (\n    <div className=\"cantorContainer\">\n      <Form \n      result={result}\n      calculateResult={calculateResult}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}